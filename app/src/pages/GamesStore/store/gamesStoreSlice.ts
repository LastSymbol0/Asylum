import { createSlice } from '@reduxjs/toolkit';
import { PublicKey } from '@solana/web3.js'
import { bannerGames as dummyBannerGames, catalogGames, friendsPlayGame, suggestedForYouGame } from '../../../nft-store/games/dummyGames';
import { fetchGamesCatalog } from './thunks';

export interface GamesStorePageState {
  gamesInCatalog: PublicKey[],
  isCatalogFetched: boolean,
  friendsPlay: PublicKey,
  suggestedForYou: PublicKey,
  bannerGames: PublicKey[],
  alreadyAdded: PublicKey[],
}

const initialState: GamesStorePageState = {
  gamesInCatalog: catalogGames.map(x => x.publicKey),
  isCatalogFetched: false,
  friendsPlay: friendsPlayGame.publicKey,
  suggestedForYou:  suggestedForYouGame.publicKey,
  bannerGames: dummyBannerGames.map(x => x.publicKey),
  alreadyAdded: [],
};

export const gamesStorePageSlice = createSlice({
  name: 'gamesStorePage',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {

  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder.addCase(fetchGamesCatalog.fulfilled, (state, action) =>
    {
        state.gamesInCatalog = state.gamesInCatalog.concat(action.payload)
        state.isCatalogFetched = true
    })
    
    builder.addCase(fetchGamesCatalog.rejected, (state, action) =>
    {
        state.isCatalogFetched = false
    })
  },
});


export default gamesStorePageSlice.reducer;
