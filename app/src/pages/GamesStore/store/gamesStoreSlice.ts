import { StringPublicKey } from 'oyster-common';
import { createSlice } from '@reduxjs/toolkit';
import { bannerGames as dummyBannerGames, friendsPlayGame, suggestedForYouGame } from '../../../nft-store/games/dummyGames';
import { fetchGamesCatalog } from './thunks';

export interface GamesStorePageState {
  gamesInCatalog: StringPublicKey[],
  isCatalogFetched: boolean,
  friendsPlay: StringPublicKey,
  suggestedForYou: StringPublicKey,
  bannerGames: StringPublicKey[],
}

const initialState: GamesStorePageState = {
  gamesInCatalog: [],//catalogGames.map(x => x.publicKey.toString()),
  isCatalogFetched: false,
  friendsPlay: friendsPlayGame.publicKey.toString(),
  suggestedForYou:  suggestedForYouGame.publicKey.toString(),
  bannerGames: dummyBannerGames.map(x => x.publicKey.toString()),
};

export const gamesStorePageSlice = createSlice({
  name: 'gamesStorePage',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {

  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder.addCase(fetchGamesCatalog.fulfilled, (state, action) =>
    {
        const set = new Set(state.gamesInCatalog)
        action.payload.forEach(x => set.add(x.toString()))
        state.isCatalogFetched = true

        state.gamesInCatalog = [...set]
    })
    
    builder.addCase(fetchGamesCatalog.rejected, (state, action) =>
    {
        state.isCatalogFetched = false
    })
  },
});


export default gamesStorePageSlice.reducer;
